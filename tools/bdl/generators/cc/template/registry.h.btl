{#- Re-usable macros -#}
{%- include "tools/bdl/generators/cc/template/declarations.h.btl" -%}

#pragma once

// Declaration of the registry type.
struct Registry
{
	/**
	 * Get the registry instance.
	 */
	static [[nodiscard]] Registry& get() noexcept;

	// Registry members.
{% for expresssion in registry %}
	{{ expresssion.typeResolved | typeReferenceToStr }} {{ expresssion.fqn | fqnToNameStr }};
{% end %}
};

Registry& Registry::get() noexcept
{
	// Definition of all registry members.
	{% for expresssion in registry %}
	static {{ expresssion.typeResolved | typeToStr }} {{ expresssion.fqn | fqnToNameStr }}{ {{- declareParametersValues(expresssion.parametersResolved, true) -}} };
	{% end %}

	// Definition of the registry.
	static Registry registry{ {%- for i, expresssion in registry %}{% if i %}, {% end %}{{ expresssion.fqn | fqnToNameStr }}{% end -%} };

	return registry;
}

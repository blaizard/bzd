{#- Re-usable macros -#}
{%- include "tools/bdl/generators/cc/template/declarations.h.btl" -%}

struct Registry
{
{% for expresssion in registry %}
	{{ expresssion.typeResolved | typeReferenceToStr }} {{ expresssion.name }};
{% end %}
};

{% for expresssion in registry %}
	{{ expresssion.typeResolved | typeToStr }} {{ expresssion.name }}{ {{- declareParameters(expresssion.parametersResolved, false) -}} };
{% end %}

/**
 * Registry
 */
class Registry
{
	// Definition for all registry entries.
	static bzd::platform::linux::Core<100000> bzd_linux0{0};
	static bzd::platform::linux::Core<100000> bzd_linux1{1};
	static bzd::platform::core::Executor executor{bzd_linux0, bzd_linux1};

	// Registry structure containing a reference of all entries.
	struct Registry
	{
		decltype(bzd_linux0)& bzd_linux0;
		decltype(bzd_linux1)& bzd_linux1;
		decltype(executor)& executor;
	};
	static Registry registry{bzd_linux0, bzd_linux1, executor};

	return registry;
}

{
    "stages": [
        {
            "commands": [
                "./tools/bazel test --target_pattern_file=tools/ci/bazel_target_patterns.txt --output_groups=+metadata --config=dev --config=clang-tidy --config=mypy --platform_suffix=static_analysis"
            ],
            "name": "static analysis",
            "tags": [
                "x86_64",
                "clang"
            ]
        },
        {
            "commands": [
                "./tools/bazel test --target_pattern_file=tools/ci/bazel_target_patterns.txt --output_groups=+metadata --config=clang --config=prod --config=cc --platform_suffix=clang-prod"
            ],
            "name": "clang prod",
            "tags": [
                "x86_64",
                "clang"
            ]
        },
        {
            "commands": [
                "./tools/bazel test --target_pattern_file=tools/ci/bazel_target_patterns.txt --output_groups=+metadata --config=gcc --config=prod --config=cc --platform_suffix=gcc-prod"
            ],
            "name": "gcc prod",
            "tags": [
                "x86_64",
                "gcc"
            ]
        },
        {
            "commands": [
                "./tools/bazel test --target_pattern_file=tools/ci/bazel_target_patterns.txt --output_groups=+metadata --config=esp32 --config=prod --config=cc --platform_suffix=esp32-prod"
            ],
            "name": "esp32 prod",
            "tags": [
                "esp32",
                "gcc"
            ]
        },
        {
            "commands": [
                "./tools/bazel test --target_pattern_file=tools/ci/bazel_target_patterns.txt --output_groups=+metadata --config=esp32s3 --config=prod --config=cc --platform_suffix=esp32s3-prod"
            ],
            "name": "esp32s3 prod",
            "tags": [
                "esp32s3",
                "gcc"
            ]
        },
        {
            "category": "stress",
            "commands": [
                "./tools/bazel test --target_pattern_file=tools/ci/bazel_target_patterns.txt --build_tests_only --test_tag_filters=stress,-cc-coverage --config=dev --runs_per_test={runs} --local_test_jobs=1 --platform_suffix=stress-dev"
            ],
            "name": "dev ({runs} runs)",
            "tags": [
                "x86_64",
                "clang",
                "dev"
            ]
        },
        {
            "category": "stress",
            "commands": [
                "./tools/bazel test --target_pattern_file=tools/ci/bazel_target_patterns.txt --build_tests_only --test_tag_filters=stress,-cc-coverage --config=prod --runs_per_test={runs} --local_test_jobs=1 --platform_suffix=stress-prod"
            ],
            "name": "prod ({runs} runs)",
            "tags": [
                "x86_64",
                "clang",
                "prod"
            ]
        },
        {
            "category": "sanitizer",
            "commands": [
                "./tools/bazel test --target_pattern_file=tools/ci/bazel_target_patterns.txt --config=clang --config=cc --config=sanitizer --config=asan --config=lsan --config=ubsan --platform_suffix=clang-asan-lsan-ubsan"
            ],
            "name": "asan/lsan/ubsan",
            "tags": [
                "x86_64",
                "clang",
                "static_analyzer"
            ]
        },
        {
            "category": "sanitizer",
            "commands": [
                "./tools/bazel test --target_pattern_file=tools/ci/bazel_target_patterns.txt --config=clang --config=cc --config=sanitizer --config=tsan --platform_suffix=clang-tsan"
            ],
            "name": "tsan",
            "tags": [
                "x86_64",
                "clang",
                "static_analyzer"
            ]
        },
        {
            "category": "coverage",
            "commands": [
                "./tools/bazel coverage cc/... --config=gcc --config=cc --platform_suffix=coverage-cc --config=local",
                "./tools/bazel run @bzd_coverage//:coverage --platform_suffix=coverage-cc --config=local -- --output bazel-out/coverage-cc"
            ],
            "name": "cc",
            "output": "bazel-out/coverage-cc",
            "tags": [
                "x86_64",
                "cc"
            ]
        },
        {
            "category": "coverage",
            "commands": [
                "./tools/bazel coverage ... --config=nodejs --platform_suffix=coverage-nodejs --config=local",
                "./tools/bazel run @bzd_coverage//:coverage --platform_suffix=coverage-nodejs --config=local -- --output bazel-out/coverage-nodejs"
            ],
            "name": "nodejs",
            "output": "bazel-out/coverage-nodejs",
            "tags": [
                "x86_64",
                "nodejs"
            ]
        },
        {
            "category": "sanitizer",
            "commands": [
                "./tools/bazel run :sanitizer -- --check --all"
            ],
            "name": "sanitizer",
            "tags": []
        }
    ]
}
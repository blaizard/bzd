{
    "stages": [
        {
            "command": "./tools/bazel test ... --output_groups=+metadata --config=linux_x86_64_clang --config=dev --config=clang_tidy --platform_suffix=_linux_x86_64_clang_dev",
            "name": "linux_x86_64_clang dev + clang-tidy"
        },
        {
            "command": "./tools/bazel test ... --output_groups=+metadata --config=linux_x86_64_clang --config=prod --platform_suffix=_linux_x86_64_clang_prod",
            "name": "linux_x86_64_clang prod"
        },
        {
            "command": "./tools/bazel test ... --output_groups=+metadata --config=linux_x86_64_gcc --config=prod --config=cc --platform_suffix=_linux_x86_64_gcc_prod",
            "name": "linux_x86_64_gcc"
        },
        {
            "command": "./tools/bazel test ... --output_groups=+metadata --config=esp32_xtensa_lx6_gcc --config=prod --config=cc --platform_suffix=_esp32_xtensa_lx6_gcc_prod",
            "name": "esp32_xtensa_lx6_gcc"
        },
        {
            "category": "stress",
            "command": "./tools/bazel test ... --build_tag_filters=stress --test_tag_filters=stress --config=linux_x86_64_clang --config=dev --runs_per_test=100 --platform_suffix=_linux_x86_64_clang_dev",
            "name": "dev"
        },
        {
            "category": "stress",
            "command": "./tools/bazel test ... --build_tag_filters=stress --test_tag_filters=stress --config=linux_x86_64_clang --config=prod --runs_per_test=100 --platform_suffix=_linux_x86_64_clang_prod",
            "name": "prod"
        },
        {
            "category": "sanitizer",
            "command": "./tools/bazel test ... --config=linux_x86_64_clang --config=cc --config=sanitizer --config=asan --config=lsan --platform_suffix=_clang_asan_lsan",
            "name": "asan/lsan"
        },
        {
            "category": "coverage",
            "command": "./tools/bazel coverage cc/... --config=linux_x86_64_gcc --config=cc --platform_suffix=_coverage_cc && ./tools/bazel run tools/coverage -- --output bazel-out/coverage_cc",
            "name": "C++",
            "output": "bazel-out/coverage_cc"
        },
        {
            "category": "coverage",
            "command": "./tools/bazel coverage ... --config=py --platform_suffix=_coverage_py && ./tools/bazel run tools/coverage -- --output bazel-out/coverage_py",
            "name": "Python",
            "output": "bazel-out/coverage_py"
        },
        {
            "category": "coverage",
            "command": "./tools/bazel coverage ... --config=nodejs --platform_suffix=_coverage_nodejs && ./tools/bazel run tools/coverage -- --output bazel-out/coverage_nodejs",
            "name": "NodeJs",
            "output": "bazel-out/coverage_nodejs"
        },
        {
            "category": "sanitizer",
            "command": "./sanitize.sh",
            "name": "sanitizer"
        }
    ]
}
name: CI

on:
    push: {}

jobs:
    build:
        runs-on: ubuntu-24.04

        steps:
            - uses: actions/checkout@v1
            - uses: actions/setup-java@v1
              with:
                  java-version: "11.0"
                  architecture: x64

            - name: "Free Up Disk Space (hack)"
              run: |
                  sudo rm -rf /usr/share/dotnet
                  sudo rm -rf /opt/ghc
                  sudo rm -rf "/usr/local/share/boost"
                  sudo rm -rf "$AGENT_TOOLSDIRECTORY"

            - name: "Environment"
              run: |
                  cp tools/ci/github/.bazelrc.local .bazelrc.local
                  export PATH="${PATH}:${GITHUB_WORKSPACE}/bin"
                  ./info.sh

            - name: "Build Tools"
              run: |
                  mkdir bin
                  ./tools/bazel build //tools/ci:bzd_node --remote_download_toplevel --//apps/artifacts/api:config.set=remotes=https://data.blaizard.com --//apps/artifacts/api:config.set=token=${{{ secrets.BZD_NODE_TOKEN }}
                  cp bazel-bin/tools/ci/bzd_node bin/bzd-node

{% for stage in stages %}
            - name: "[{{ stage.category }}] {{ stage.name }}"
              run: |
                  ./tools/bazel clean --expunge
      {% for index, command in stage.commands %}
                  ./bin/bzd-node timeit --path github/{{ stage.category | normalizeIdentifier }}_{{ stage.name | normalizeIdentifier }}/command-{{ index }} \
                  {{ command }}
      {% end %}
      {% if stage.category == "coverage" %}
                  ./bin/bzd-node publish-json --path coverage/{{ stage.name | normalizeIdentifier }} $(pwd)/bazel-out/coverage/report.json
      {% end %}

{% end %}
            - name: Build documentation
              run: |
                  ./tools/bazel build docs
                  rm -rfd .dist
                  mkdir -p .dist
                  tar -xf ./bazel-bin/docs/docs.tar -C .dist
            - uses: cpina/github-action-push-to-another-repository@main
              env:
                  SSH_DEPLOY_KEY: ${{{ secrets.SSH_DEPLOY_KEY }}
              with:
                  source-directory: ".dist"
                  destination-github-username: "blaizard"
                  destination-repository-name: "blaizard.github.io"
                  user-email: doc.publish@blaizard.com
                  target-branch: main
                  target-directory: bzd/

            - name: "Info"
              if: always()
              run: |
                  ./info.sh

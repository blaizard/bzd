use "cc/components/linux/core/interface.bdl"
use "cc/components/posix/stream/out/interface.bdl"
use "cc/components/posix/stream/in/interface.bdl"
use "cc/components/std/clock/steady/interface.bdl"
use "cc/components/std/clock/system/interface.bdl"
use "cc/components/linux/proactor/epoll/interface.bdl"
use "cc/components/posix/shmem/interface.bdl"



composition {
	core1 = bzd.platform.linux.Core(stackSize = 200000, name = 2.3);
	core2 = bzd.platform.linux.Core(stackSize = 200000);
	executor = bzd.platform.generic.Executor(cores = list(core1, core2)) [executor];
	proactor = bzd.platform.linux.epoll.Proactor();
	shmem = bzd.platform.posix.Shmem("/hello");
	
}

composition platform {
	out: bzd.OStream = bzd.platform.posix.Out(proactor = proactor);
	in: bzd.IStream = bzd.platform.posix.In(proactor = proactor);
	steadyClock: bzd.SteadyClock = bzd.platform.std.clock.Steady();
	systemClock: bzd.SystemClock = bzd.platform.std.clock.System();
	
}



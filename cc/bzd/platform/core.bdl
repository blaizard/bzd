namespace bzd.platform;

// Type describing the size of a stack.
using StackSize = Integer [min(0) max(8000000)];
// Type describing the identifier of a core.
using CoreId = Integer [min(0) max(64)];
// A core is a processing unit that accepts a single scheduler.
interface Core{
	// Error codes for core-related functionality.
	enum Error
	{
		// The error comes from something related to memory alignment.
		ALIGNMENT
	,	// The error comes from something related to memory size.
		SIZE
	,	OTHER
	}
	
	// Start a workload on the core and return immediatly.
	method start(workload = Callable) -> Result<Void, Error>;
	// Initialize the core.
	method stop() -> Result<Void, Error>;
	// Get the current stack usage.
	method getStackUsage() -> StackSize;
	// Get the current core identifier.
	method getId() -> CoreId;
	
}

interface Executor{
	// Start the executor and starts all cores previously initialized.
	method start();
	method stop();
	
}



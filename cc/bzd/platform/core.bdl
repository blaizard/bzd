namespace bzd.platform;

// Type describing the size of a stack.
using StackSize = Integer [min = 0, max = 8000000];
// Type describing the identifier of a core.
using CoreId = Integer [min = 0, max = 64];
// A core is a processing unit that accepts a single scheduler.
interface Core{
	// Error codes for core-related functionality.
	enum Error
	{
		// The object was used before being properly initialized.
		UNINITIALIZED
	,	// The error comes from something related to memory alignment.
		ALIGNMENT
	,	// The error comes from something related to memory size.
		SIZE,
		OTHER
	}
	
	// Initialize the core.
	method start() -> Result<void, Error>;
	// Initialize the core.
	method stop() -> Result<void, Error>;
	// Execute a workload on the core and return immediatly.
	method run(Callable workload);
	// Get the current stack usage.
	method getStackUsage() -> StackSize;
	// Get the current core identifier.
	method getId() -> CoreId;
	
}



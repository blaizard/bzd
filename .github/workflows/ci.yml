name: CI

on:
  push: {}

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-java@v1
      with:
        java-version: '11.0'
        architecture: x64

    - name: "Environment"
      run: |
        cp tools/ci/github/.bazelrc.local .bazelrc.local
        export PATH="${PATH}:${GITHUB_WORKSPACE}/bin"
        ./info.sh

    - name: Build documentation
      run: |
        ./tools/bazel build docs
        rm -rfd .dist
        mkdir -p .dist
        tar -xf ./bazel-bin/docs/docs.tar -C .dist
    - uses: cpina/github-action-push-to-another-repository@main
      env:
        SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
      with:
        source-directory: ".dist"
        destination-github-username: "blaizard"
        destination-repository-name: "blaizard.github.io"
        target-branch: main
        target-directory: .

    - name: "[normal] clang-tidy"
      run: |
        ./tools/bazel clean --expunge
        ./tools/bazel test ... --output_groups=+metadata --config=dev --config=clang_tidy --platform_suffix=clang_tidy

    - name: "[normal] linux_x86_64_clang prod"
      run: |
        ./tools/bazel clean --expunge
        ./tools/bazel test ... --output_groups=+metadata --config=linux_x86_64_clang --config=prod --config=cc --platform_suffix=linux_x86_64_clang_prod

    - name: "[normal] linux_x86_64_gcc prod"
      run: |
        ./tools/bazel clean --expunge
        ./tools/bazel test ... --output_groups=+metadata --config=linux_x86_64_gcc --config=prod --config=cc --platform_suffix=linux_x86_64_gcc_prod

    - name: "[normal] esp32_xtensa_lx6_gcc prod"
      run: |
        ./tools/bazel clean --expunge
        ./tools/bazel run tools/docker_images:xtensa_qemu
        ./tools/bazel test ... --output_groups=+metadata --config=esp32_xtensa_lx6_gcc --config=prod --config=cc --platform_suffix=esp32_xtensa_lx6_gcc_prod

    - name: "[sanitizer] asan/lsan/ubsan"
      run: |
        ./tools/bazel clean --expunge
        ./tools/bazel test ... --config=linux_x86_64_clang --config=cc --config=sanitizer --config=asan --config=lsan --config=ubsan --platform_suffix=clang_asan_lsan_ubsan

    - name: "[sanitizer] tsan"
      run: |
        ./tools/bazel clean --expunge
        ./tools/bazel test ... --config=linux_x86_64_clang --config=cc --config=sanitizer --config=tsan --platform_suffix=clang_tsan

    - name: "[sanitizer] sanitizer"
      run: |
        ./tools/bazel clean --expunge
        ./sanitize.sh


    - name: "Info"
      if: always()
      run: |
        ./info.sh

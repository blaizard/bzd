common --announce_rc

try-import .bazelrc.local

# Build specific options
build --color=yes
build --verbose_failures

# Set default options used by the default run
build --copt "-std=c++14"
build --copt "-Os"
build -c opt

# Test specific options
test --test_output=errors
test --action_env="GTEST_COLOR=1"
test --verbose_failures

# linux_x86_64_clang
build:linux_x86_64_clang --platforms="@linux_x86_64_clang//:platform"
build:linux_x86_64_clang --host_platform="@linux_x86_64_clang//:host_platform"
build:linux_x86_64_clang --incompatible_enable_cc_toolchain_resolution

# Sanitizers

build:sanitizer --keep_going
build:sanitizer --nocache_test_results
build:sanitizer --copt -O1
build:sanitizer --copt -g
build:sanitizer --copt -fno-omit-frame-pointer
build:sanitizer --copt -fno-optimize-sibling-calls
build:sanitizer --strip never

# Address Sanitizer
build:asan --copt -fsanitize=address
build:asan --copt -fno-omit-frame-pointer
build:asan --linkopt -fsanitize=address

# Leak Sanitizer
build:lsan --copt -fsanitize=leak
build:lsan --copt -DLEAK_SANITIZER
build:lsan --linkopt -fsanitize=leak

# Undefined Behavior Sanitizer
build:ubsan --copt -fsanitize=undefined
build:ubsan --copt -DUNDEFINED_SANITIZER
build:ubsan --linkopt -fsanitize=undefined
build:ubsan --linkopt -lubsan

# Memory Sanitizer
build:msan --copt -fsanitize=memory
build:msan --copt -fno-omit-frame-pointer
build:msan --copt -fsanitize-memory-track-origins
build:msan --linkopt -fsanitize=memory

# Thread Sanitizer
build:tsan --copt -fsanitize=thread
build:tsan --copt -DTHREAD_SANITIZER
build:tsan --linkopt -fsanitize=thread

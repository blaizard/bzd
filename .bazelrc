common --announce_rc

try-import .bazelrc.local

# Add timestamps
common --show_timestamps

# Build specific options
build --verbose_failures

# Set default options used by the default run
build --cxxopt "-std=c++17"
build --copt "-Wall"
build --copt "-Wextra"
build --copt "-Werror"
build --copt "-gdwarf-4"
build "--strip=never"

# Test specific options
test --test_output=errors
test --verbose_failures
test --define=panic=throw

# Coverage specific options
coverage --combined_report=lcov
coverage --nobuild_tests_only
coverage --instrument_test_targets

# Select only C++ targets
build:cc --build_tag_filters="cc"
test:cc --test_tag_filters=cc

# Select only Python targets
build:py --build_tag_filters="-nodejs,-docker"
test:py --test_lang_filters=py

# Select only NodeJs targets
build:nodejs --build_tag_filters=nodejs
test:nodejs --test_tag_filters=nodejs
coverage:nodejs --test_env=LCOV_MERGER=/bin/true

# Prevent building twice tools used for host and target, for nodejs rules for example.
build --nodistinct_host_configuration

# Add stamping
build --workspace_status_command tools/bazel_build/buildstamp/stamp.sh

# Increase hermeticity
build --incompatible_strict_action_env

# Development and production configuration
build:dev --copt "-O0"
build:dev --define=build=dev
build:prod --copt "-Os"
build:prod --define=build=prod

# linux_x86_64_gcc
build:linux_x86_64_gcc --platforms="@linux_x86_64_gcc//:platform"
build:linux_x86_64_gcc --extra_execution_platforms="@linux_x86_64_gcc//:host_platform"
build:linux_x86_64_gcc --incompatible_enable_cc_toolchain_resolution
build:linux_x86_64_gcc --platform_suffix=_linux_x86_64_gcc

# linux_x86_64_clang
build:linux_x86_64_clang --platforms="@linux_x86_64_clang//:platform"
build:linux_x86_64_clang --extra_execution_platforms="@linux_x86_64_clang//:host_platform"
build:linux_x86_64_clang --incompatible_enable_cc_toolchain_resolution
build:linux_x86_64_clang --platform_suffix=_linux_x86_64_clang

# esp32_xtensa_lx6_gcc
build:esp32_xtensa_lx6_gcc --platforms="@esp32_xtensa_lx6_gcc//:platform"
build:esp32_xtensa_lx6_gcc --incompatible_enable_cc_toolchain_resolution
build:esp32_xtensa_lx6_gcc --features=-supports_dynamic_linker
build:esp32_xtensa_lx6_gcc --platform_suffix=_esp32_xtensa_lx6_gcc

# Sanitizers

build:sanitizer --keep_going
build:sanitizer --copt -O1
build:sanitizer --copt -g
build:sanitizer --copt -fno-optimize-sibling-calls
build:sanitizer --strip never

# Address Sanitizer
build:asan --copt -fsanitize=address
build:asan --linkopt -fsanitize=address

# Leak Sanitizer
build:lsan --copt -fsanitize=leak
build:lsan --copt -DLEAK_SANITIZER
build:lsan --linkopt -fsanitize=leak

# Undefined Behavior Sanitizer
build:ubsan --copt -fsanitize=undefined
build:ubsan --copt -DUNDEFINED_SANITIZER
build:ubsan --linkopt -fsanitize=undefined
build:ubsan --linkopt -lubsan

# Memory Sanitizer
build:msan --copt -fsanitize=memory
build:msan --copt -fsanitize-memory-track-origins
build:msan --linkopt -fsanitize=memory

# Thread Sanitizer
build:tsan --copt -fsanitize=thread
build:tsan --copt -DTHREAD_SANITIZER
build:tsan --linkopt -fsanitize=thread

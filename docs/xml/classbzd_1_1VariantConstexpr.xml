<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classbzd_1_1VariantConstexpr" kind="class" language="C++" prot="public">
    <compoundname>bzd::VariantConstexpr</compoundname>
    <basecompoundref refid="classbzd_1_1impl_1_1Variant" prot="public" virt="non-virtual">bzd::impl::Variant&lt; bzd::tmp::UnionConstexpr&lt; Ts... &gt;, Ts... &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>class...</type>
        <declname>Ts</declname>
        <defname>Ts</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="classbzd_1_1VariantConstexpr_1a2cfe0c39021f2c190c6ecf5bbca44ed3" prot="protected" static="no">
        <type><ref refid="classbzd_1_1VariantConstexpr" kindref="compound">VariantConstexpr</ref>&lt; Ts... &gt;</type>
        <definition>using bzd::VariantConstexpr&lt; Ts &gt;::Self =  VariantConstexpr&lt;Ts...&gt;</definition>
        <argsstring></argsstring>
        <name>Self</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/container/variant.h" line="146" column="1" bodyfile="include/container/variant.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classbzd_1_1VariantConstexpr_1a233f6fce716fa83b0481450f5387c546" prot="protected" static="no">
        <type><ref refid="classbzd_1_1impl_1_1Variant" kindref="compound">bzd::impl::Variant</ref>&lt; <ref refid="unionbzd_1_1tmp_1_1impl_1_1UnionConstexpr" kindref="compound">bzd::tmp::UnionConstexpr</ref>&lt; Ts... &gt;, Ts... &gt;</type>
        <definition>using bzd::VariantConstexpr&lt; Ts &gt;::Parent =  bzd::impl::Variant&lt;bzd::tmp::UnionConstexpr&lt;Ts...&gt;, Ts...&gt;</definition>
        <argsstring></argsstring>
        <name>Parent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/container/variant.h" line="147" column="1" bodyfile="include/container/variant.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classbzd_1_1VariantConstexpr_1a68f73d3edd90ed27c20c2e95ccc7e5ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr bzd::VariantConstexpr&lt; Ts &gt;::VariantConstexpr</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>VariantConstexpr</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/container/variant.h" line="151" column="1" bodyfile="include/container/variant.h" bodystart="151" bodyend="151"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="601">
        <label>bzd::impl::Variant&lt; bzd::tmp::UnionConstexpr&lt; Ts... &gt;, Ts... &gt;</label>
        <link refid="classbzd_1_1impl_1_1Variant"/>
      </node>
      <node id="600">
        <label>bzd::VariantConstexpr&lt; Ts &gt;</label>
        <link refid="classbzd_1_1VariantConstexpr"/>
        <childnode refid="601" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="603">
        <label>bzd::impl::Variant&lt; bzd::tmp::UnionConstexpr&lt; Ts... &gt;, Ts... &gt;</label>
        <link refid="classbzd_1_1impl_1_1Variant"/>
        <childnode refid="604" relation="usage">
          <edgelabel>data_</edgelabel>
        </childnode>
      </node>
      <node id="604">
        <label>bzd::tmp::impl::UnionConstexpr&lt; Ts... &gt;</label>
        <link refid="unionbzd_1_1tmp_1_1impl_1_1UnionConstexpr"/>
        <childnode refid="604" relation="usage">
          <edgelabel>next_</edgelabel>
        </childnode>
        <childnode refid="605" relation="usage">
          <edgelabel>value_</edgelabel>
        </childnode>
      </node>
      <node id="605">
        <label>Ts</label>
        <link refid="classTs"/>
      </node>
      <node id="602">
        <label>bzd::VariantConstexpr&lt; Ts &gt;</label>
        <link refid="classbzd_1_1VariantConstexpr"/>
        <childnode refid="603" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/container/variant.h" line="144" column="1" bodyfile="include/container/variant.h" bodystart="143" bodyend="152"/>
    <listofallmembers>
      <member refid="classbzd_1_1impl_1_1Variant_1ae11d4179ac1a3026f4117b5e8addb91e" prot="protected" virt="non-virtual"><scope>bzd::VariantConstexpr</scope><name>ChooseNth</name></member>
      <member refid="classbzd_1_1impl_1_1Variant_1a33736feeb662d022ff31ccc192770ba2" prot="protected" virt="non-virtual"><scope>bzd::VariantConstexpr</scope><name>Contains</name></member>
      <member refid="classbzd_1_1impl_1_1Variant_1abf63d95fa214179c274de6c3ca2ecd48" prot="protected" virt="non-virtual"><scope>bzd::VariantConstexpr</scope><name>data_</name></member>
      <member refid="classbzd_1_1impl_1_1Variant_1a22c8cde3db48bc6bc17b9dfae7c00dfe" prot="protected" virt="non-virtual"><scope>bzd::VariantConstexpr</scope><name>Find</name></member>
      <member refid="classbzd_1_1impl_1_1Variant_1a2c79785352b6a118f05562d4df93727f" prot="public" virt="non-virtual"><scope>bzd::VariantConstexpr</scope><name>get</name></member>
      <member refid="classbzd_1_1impl_1_1Variant_1ab69a180ec931f4ab33c5891443811e36" prot="public" virt="non-virtual"><scope>bzd::VariantConstexpr</scope><name>get</name></member>
      <member refid="classbzd_1_1impl_1_1Variant_1aa7a2fc3a5d560c79c78e26fdf56a5996" prot="protected" virt="non-virtual"><scope>bzd::VariantConstexpr</scope><name>Helper</name></member>
      <member refid="classbzd_1_1impl_1_1Variant_1a4724248f12580869e0d80807fe68e8dd" prot="protected" virt="non-virtual"><scope>bzd::VariantConstexpr</scope><name>id_</name></member>
      <member refid="classbzd_1_1impl_1_1Variant_1a562baf45680f0985c52c861f8dbd344d" prot="public" virt="non-virtual"><scope>bzd::VariantConstexpr</scope><name>is</name></member>
      <member refid="classbzd_1_1impl_1_1Variant_1a6076c32bbf520055a3a8922b1156800c" prot="protected" virt="non-virtual"><scope>bzd::VariantConstexpr</scope><name>Match</name></member>
      <member refid="classbzd_1_1impl_1_1Variant_1ab34de94c5bfac2ca8662e03757d0a309" prot="public" virt="non-virtual"><scope>bzd::VariantConstexpr</scope><name>match</name></member>
      <member refid="classbzd_1_1VariantConstexpr_1a233f6fce716fa83b0481450f5387c546" prot="protected" virt="non-virtual"><scope>bzd::VariantConstexpr</scope><name>Parent</name></member>
      <member refid="classbzd_1_1VariantConstexpr_1a2cfe0c39021f2c190c6ecf5bbca44ed3" prot="protected" virt="non-virtual"><scope>bzd::VariantConstexpr</scope><name>Self</name></member>
      <member refid="classbzd_1_1impl_1_1Variant_1a9278f2fa989268e6009e5fa792a94afa" prot="protected" virt="non-virtual"><scope>bzd::VariantConstexpr</scope><name>TypeList</name></member>
      <member refid="classbzd_1_1impl_1_1Variant_1a94b14a37ebd4899550f5ce6630715cdf" prot="public" virt="non-virtual"><scope>bzd::VariantConstexpr</scope><name>Variant</name></member>
      <member refid="classbzd_1_1impl_1_1Variant_1a814875f9a6cfc7e22972466999a88d2f" prot="public" virt="non-virtual"><scope>bzd::VariantConstexpr</scope><name>Variant</name></member>
      <member refid="classbzd_1_1VariantConstexpr_1a68f73d3edd90ed27c20c2e95ccc7e5ab" prot="public" virt="non-virtual"><scope>bzd::VariantConstexpr</scope><name>VariantConstexpr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classbzd_1_1Scheduler" kind="class" language="C++" prot="public">
    <compoundname>bzd::Scheduler</compoundname>
    <basecompoundref refid="classbzd_1_1SingletonThreadLocalImpl" prot="public" virt="non-virtual">bzd::SingletonThreadLocalImpl&lt; Scheduler &gt;</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classbzd_1_1Scheduler_1a003d78aa08da7c42b3f859dc26faafde" prot="private" static="no" mutable="no">
        <type>std::list&lt; <ref refid="classbzd_1_1interface_1_1Task" kindref="compound">bzd::interface::Task</ref> * &gt;</type>
        <definition>std::list&lt;bzd::interface::Task*&gt; bzd::Scheduler::queue_</definition>
        <argsstring></argsstring>
        <name>queue_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/scheduler.h" line="40" column="1" bodyfile="include/scheduler.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbzd_1_1Scheduler_1a2b72bafdcc85f042c9afdc63f5be2da5" prot="private" static="no" mutable="no">
        <type><ref refid="classbzd_1_1interface_1_1Task" kindref="compound">bzd::interface::Task</ref> *</type>
        <definition>bzd::interface::Task* bzd::Scheduler::task_</definition>
        <argsstring></argsstring>
        <name>task_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/scheduler.h" line="41" column="1" bodyfile="include/scheduler.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbzd_1_1Scheduler_1a3bfef50031297dba8360cec9a2f698ba" prot="private" static="no" mutable="no">
        <type>void *</type>
        <definition>void* bzd::Scheduler::mainStack_</definition>
        <argsstring></argsstring>
        <name>mainStack_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/scheduler.h" line="42" column="1" bodyfile="include/scheduler.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classbzd_1_1Scheduler_1a976e50ed0d9504b9d83a238a0be894ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void bzd::Scheduler::addTask</definition>
        <argsstring>(bzd::interface::Task &amp;task)</argsstring>
        <name>addTask</name>
        <param>
          <type><ref refid="classbzd_1_1interface_1_1Task" kindref="compound">bzd::interface::Task</ref> &amp;</type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a new task to the scheduler </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/scheduler.h" line="16" column="1" bodyfile="include/scheduler.h" bodystart="16" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classbzd_1_1Scheduler_1a91c204d863b2ffc4bfe1d4ac92b621a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void bzd::Scheduler::start</definition>
        <argsstring>()</argsstring>
        <name>start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/scheduler.h" line="22" column="1" bodyfile="include/scheduler.h" bodystart="22" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classbzd_1_1Scheduler_1a2b41b666d28680da4e944816747a82d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void bzd::Scheduler::yield</definition>
        <argsstring>()</argsstring>
        <name>yield</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/scheduler.h" line="29" column="1" bodyfile="include/scheduler.h" bodystart="29" bodyend="37"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="476">
        <label>bzd::Scheduler</label>
        <link refid="classbzd_1_1Scheduler"/>
        <childnode refid="477" relation="public-inheritance">
        </childnode>
      </node>
      <node id="477">
        <label>bzd::SingletonThreadLocalImpl&lt; Scheduler &gt;</label>
        <link refid="classbzd_1_1SingletonThreadLocalImpl"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="478">
        <label>bzd::Scheduler</label>
        <link refid="classbzd_1_1Scheduler"/>
        <childnode refid="479" relation="public-inheritance">
        </childnode>
      </node>
      <node id="479">
        <label>bzd::SingletonThreadLocalImpl&lt; Scheduler &gt;</label>
        <link refid="classbzd_1_1SingletonThreadLocalImpl"/>
      </node>
    </collaborationgraph>
    <location file="include/scheduler.h" line="11" column="1" bodyfile="include/scheduler.h" bodystart="10" bodyend="43"/>
    <listofallmembers>
      <member refid="classbzd_1_1Scheduler_1a976e50ed0d9504b9d83a238a0be894ff" prot="public" virt="non-virtual"><scope>bzd::Scheduler</scope><name>addTask</name></member>
      <member refid="classbzd_1_1SingletonThreadLocalImpl_1ae16a19015400e03515d16f65ac014f32" prot="public" virt="non-virtual"><scope>bzd::Scheduler</scope><name>getInstance</name></member>
      <member refid="classbzd_1_1Scheduler_1a3bfef50031297dba8360cec9a2f698ba" prot="private" virt="non-virtual"><scope>bzd::Scheduler</scope><name>mainStack_</name></member>
      <member refid="classbzd_1_1SingletonThreadLocalImpl_1a8321bf0aa328bbf78130e712fe1941fc" prot="public" virt="non-virtual"><scope>bzd::Scheduler</scope><name>operator=</name></member>
      <member refid="classbzd_1_1Scheduler_1a003d78aa08da7c42b3f859dc26faafde" prot="private" virt="non-virtual"><scope>bzd::Scheduler</scope><name>queue_</name></member>
      <member refid="classbzd_1_1SingletonThreadLocalImpl_1a1779b281bafb24fc15a4bde2ceb95d99" prot="public" virt="non-virtual"><scope>bzd::Scheduler</scope><name>SingletonThreadLocalImpl</name></member>
      <member refid="classbzd_1_1SingletonThreadLocalImpl_1ab31acae6b49f835187e79587fd2bdfcc" prot="protected" virt="non-virtual"><scope>bzd::Scheduler</scope><name>SingletonThreadLocalImpl</name></member>
      <member refid="classbzd_1_1Scheduler_1a91c204d863b2ffc4bfe1d4ac92b621a5" prot="public" virt="non-virtual"><scope>bzd::Scheduler</scope><name>start</name></member>
      <member refid="classbzd_1_1Scheduler_1a2b72bafdcc85f042c9afdc63f5be2da5" prot="private" virt="non-virtual"><scope>bzd::Scheduler</scope><name>task_</name></member>
      <member refid="classbzd_1_1Scheduler_1a2b41b666d28680da4e944816747a82d6" prot="public" virt="non-virtual"><scope>bzd::Scheduler</scope><name>yield</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classbzd_1_1impl_1_1format_1_1ConstexprVector_1_1Iterator" kind="class" language="C++" prot="public">
    <compoundname>bzd::impl::format::ConstexprVector::Iterator</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classbzd_1_1impl_1_1format_1_1ConstexprVector_1_1Iterator_1a2d66f0812c968da6a2ae03c7d27f8321" prot="private" static="no" mutable="no">
        <type>const <ref refid="classbzd_1_1impl_1_1format_1_1ConstexprVector" kindref="compound">SelfType</ref> *</type>
        <definition>const SelfType* bzd::impl::format::ConstexprVector&lt; T, N &gt;::Iterator::container_</definition>
        <argsstring></argsstring>
        <name>container_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/format.h" line="47" column="1" bodyfile="include/format.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbzd_1_1impl_1_1format_1_1ConstexprVector_1_1Iterator_1aef569c2012d31a1d7166e5da55217445" prot="private" static="no" mutable="no">
        <type>SizeType</type>
        <definition>SizeType bzd::impl::format::ConstexprVector&lt; T, N &gt;::Iterator::index_</definition>
        <argsstring></argsstring>
        <name>index_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/format.h" line="48" column="1" bodyfile="include/format.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classbzd_1_1impl_1_1format_1_1ConstexprVector_1_1Iterator_1a3462865023796fe8c5a29dcc53121b59" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr bzd::impl::format::ConstexprVector&lt; T, N &gt;::Iterator::Iterator</definition>
        <argsstring>(const SelfType &amp;container, const SizeType index)</argsstring>
        <name>Iterator</name>
        <param>
          <type>const <ref refid="classbzd_1_1impl_1_1format_1_1ConstexprVector" kindref="compound">SelfType</ref> &amp;</type>
          <declname>container</declname>
        </param>
        <param>
          <type>const SizeType</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/format.h" line="40" column="1" bodyfile="include/format.h" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classbzd_1_1impl_1_1format_1_1ConstexprVector_1_1Iterator_1a96d947a380f40521fbcdc8fec95719b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classbzd_1_1impl_1_1format_1_1ConstexprVector_1_1Iterator" kindref="compound">Iterator</ref> &amp;</type>
        <definition>constexpr Iterator&amp; bzd::impl::format::ConstexprVector&lt; T, N &gt;::Iterator::operator++</definition>
        <argsstring>() noexcept</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/format.h" line="41" column="1" bodyfile="include/format.h" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classbzd_1_1impl_1_1format_1_1ConstexprVector_1_1Iterator_1af8227004fe5aad4df6d5424a9f9c9961" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool bzd::impl::format::ConstexprVector&lt; T, N &gt;::Iterator::operator==</definition>
        <argsstring>(const Iterator &amp;it) const noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classbzd_1_1impl_1_1format_1_1ConstexprVector_1_1Iterator" kindref="compound">Iterator</ref> &amp;</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/format.h" line="42" column="1" bodyfile="include/format.h" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classbzd_1_1impl_1_1format_1_1ConstexprVector_1_1Iterator_1ac32af8d99cbfb7ee423a62437353ea66" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool bzd::impl::format::ConstexprVector&lt; T, N &gt;::Iterator::operator!=</definition>
        <argsstring>(const Iterator &amp;it) const noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classbzd_1_1impl_1_1format_1_1ConstexprVector_1_1Iterator" kindref="compound">Iterator</ref> &amp;</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/format.h" line="43" column="1" bodyfile="include/format.h" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classbzd_1_1impl_1_1format_1_1ConstexprVector_1_1Iterator_1acb5bcf8391cf86bd46f0dc5e8103805a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr const DataType &amp;</type>
        <definition>constexpr const DataType&amp; bzd::impl::format::ConstexprVector&lt; T, N &gt;::Iterator::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/format.h" line="44" column="1" bodyfile="include/format.h" bodystart="44" bodyend="44"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/format.h" line="38" column="1" bodyfile="include/format.h" bodystart="37" bodyend="49"/>
    <listofallmembers>
      <member refid="classbzd_1_1impl_1_1format_1_1ConstexprVector_1_1Iterator_1a2d66f0812c968da6a2ae03c7d27f8321" prot="private" virt="non-virtual"><scope>bzd::impl::format::ConstexprVector::Iterator</scope><name>container_</name></member>
      <member refid="classbzd_1_1impl_1_1format_1_1ConstexprVector_1_1Iterator_1aef569c2012d31a1d7166e5da55217445" prot="private" virt="non-virtual"><scope>bzd::impl::format::ConstexprVector::Iterator</scope><name>index_</name></member>
      <member refid="classbzd_1_1impl_1_1format_1_1ConstexprVector_1_1Iterator_1a3462865023796fe8c5a29dcc53121b59" prot="public" virt="non-virtual"><scope>bzd::impl::format::ConstexprVector::Iterator</scope><name>Iterator</name></member>
      <member refid="classbzd_1_1impl_1_1format_1_1ConstexprVector_1_1Iterator_1ac32af8d99cbfb7ee423a62437353ea66" prot="public" virt="non-virtual"><scope>bzd::impl::format::ConstexprVector::Iterator</scope><name>operator!=</name></member>
      <member refid="classbzd_1_1impl_1_1format_1_1ConstexprVector_1_1Iterator_1acb5bcf8391cf86bd46f0dc5e8103805a" prot="public" virt="non-virtual"><scope>bzd::impl::format::ConstexprVector::Iterator</scope><name>operator*</name></member>
      <member refid="classbzd_1_1impl_1_1format_1_1ConstexprVector_1_1Iterator_1a96d947a380f40521fbcdc8fec95719b7" prot="public" virt="non-virtual"><scope>bzd::impl::format::ConstexprVector::Iterator</scope><name>operator++</name></member>
      <member refid="classbzd_1_1impl_1_1format_1_1ConstexprVector_1_1Iterator_1af8227004fe5aad4df6d5424a9f9c9961" prot="public" virt="non-virtual"><scope>bzd::impl::format::ConstexprVector::Iterator</scope><name>operator==</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

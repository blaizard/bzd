<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structbzd_1_1tmp_1_1TypeList" kind="struct" language="C++" prot="public">
    <compoundname>bzd::tmp::TypeList</compoundname>
    <templateparamlist>
      <param>
        <type>class...</type>
        <declname>Ts</declname>
        <defname>Ts</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structbzd_1_1tmp_1_1TypeList_1a6de949a4fffe29b17f59207836461618" prot="public" static="no">
        <type><ref refid="structbzd_1_1tmp_1_1TypeList" kindref="compound">TypeList</ref></type>
        <definition>using bzd::tmp::TypeList&lt; Ts &gt;::type =  TypeList</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/template_metaprogramming.h" line="79" column="1" bodyfile="include/template_metaprogramming.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structbzd_1_1tmp_1_1TypeList_1a07f099c58b5306cb19be4a522efb1308" prot="public" static="no">
        <type>typename <ref refid="structbzd_1_1tmp_1_1impl_1_1ChooseNth" kindref="compound">impl::ChooseNth</ref>&lt; N, Ts... &gt;::<ref refid="structbzd_1_1tmp_1_1TypeList" kindref="compound">type</ref></type>
        <definition>using bzd::tmp::TypeList&lt; Ts &gt;::ChooseNth =  typename impl::ChooseNth&lt;N, Ts...&gt;::type</definition>
        <argsstring></argsstring>
        <name>ChooseNth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/template_metaprogramming.h" line="83" column="1" bodyfile="include/template_metaprogramming.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structbzd_1_1tmp_1_1TypeList_1aeee6b1e8ee14e2e43027dd85d5fb616e" prot="public" static="no">
        <type>typename <ref refid="structbzd_1_1tmp_1_1impl_1_1Contains" kindref="compound">impl::Contains</ref>&lt; T, Ts... &gt;</type>
        <definition>using bzd::tmp::TypeList&lt; Ts &gt;::Contains =  typename impl::Contains&lt;T, Ts...&gt;</definition>
        <argsstring></argsstring>
        <name>Contains</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/template_metaprogramming.h" line="86" column="1" bodyfile="include/template_metaprogramming.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structbzd_1_1tmp_1_1TypeList_1a1e3dd84b5d90a1172fc2ea9fe552724f" prot="public" static="no">
        <type>typename <ref refid="structbzd_1_1tmp_1_1impl_1_1Find" kindref="compound">impl::Find</ref>&lt; 0, T, Ts... &gt;</type>
        <definition>using bzd::tmp::TypeList&lt; Ts &gt;::Find =  typename impl::Find&lt;0, T, Ts...&gt;</definition>
        <argsstring></argsstring>
        <name>Find</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/template_metaprogramming.h" line="89" column="1" bodyfile="include/template_metaprogramming.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structbzd_1_1tmp_1_1TypeList_1a7e717e36a0a84c569b8ed75c426c6171" prot="public" static="yes" mutable="no">
        <type>constexpr const SizeType</type>
        <definition>constexpr const SizeType bzd::tmp::TypeList&lt; Ts &gt;::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <initializer>= sizeof...(Ts)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/template_metaprogramming.h" line="80" column="1" bodyfile="include/template_metaprogramming.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/template_metaprogramming.h" line="78" column="1" bodyfile="include/template_metaprogramming.h" bodystart="77" bodyend="90"/>
    <listofallmembers>
      <member refid="structbzd_1_1tmp_1_1TypeList_1a07f099c58b5306cb19be4a522efb1308" prot="public" virt="non-virtual"><scope>bzd::tmp::TypeList</scope><name>ChooseNth</name></member>
      <member refid="structbzd_1_1tmp_1_1TypeList_1aeee6b1e8ee14e2e43027dd85d5fb616e" prot="public" virt="non-virtual"><scope>bzd::tmp::TypeList</scope><name>Contains</name></member>
      <member refid="structbzd_1_1tmp_1_1TypeList_1a1e3dd84b5d90a1172fc2ea9fe552724f" prot="public" virt="non-virtual"><scope>bzd::tmp::TypeList</scope><name>Find</name></member>
      <member refid="structbzd_1_1tmp_1_1TypeList_1a7e717e36a0a84c569b8ed75c426c6171" prot="public" virt="non-virtual"><scope>bzd::tmp::TypeList</scope><name>size</name></member>
      <member refid="structbzd_1_1tmp_1_1TypeList_1a6de949a4fffe29b17f59207836461618" prot="public" virt="non-virtual"><scope>bzd::tmp::TypeList</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classbzd_1_1iterator_1_1Contiguous" kind="class" language="C++" prot="public">
    <compoundname>bzd::iterator::Contiguous</compoundname>
    <templateparamlist>
      <param>
        <type>class DataType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classbzd_1_1iterator_1_1Contiguous_1a84e974999f1a7541291af005d478575c" prot="public" static="no">
        <type><ref refid="classbzd_1_1iterator_1_1Contiguous" kindref="compound">Contiguous</ref>&lt; DataType &gt;</type>
        <definition>using bzd::iterator::Contiguous&lt; DataType &gt;::SelfType =  Contiguous&lt;DataType&gt;</definition>
        <argsstring></argsstring>
        <name>SelfType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/container/iterator/contiguous.h" line="13" column="1" bodyfile="include/container/iterator/contiguous.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classbzd_1_1iterator_1_1Contiguous_1a6f981461f4488832a5dd04e16ec3631f" prot="private" static="no" mutable="no">
        <type>DataType *</type>
        <definition>DataType* bzd::iterator::Contiguous&lt; DataType &gt;::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/container/iterator/contiguous.h" line="89" column="1" bodyfile="include/container/iterator/contiguous.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbzd_1_1iterator_1_1Contiguous_1ad4573267cd81532f8903048ba99032a5" prot="private" static="no" mutable="no">
        <type>SizeType</type>
        <definition>SizeType bzd::iterator::Contiguous&lt; DataType &gt;::index_</definition>
        <argsstring></argsstring>
        <name>index_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/container/iterator/contiguous.h" line="90" column="1" bodyfile="include/container/iterator/contiguous.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classbzd_1_1iterator_1_1Contiguous_1a9fc2da38f13c81cfdce278a29e9c9e07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr bzd::iterator::Contiguous&lt; DataType &gt;::Contiguous</definition>
        <argsstring>(DataType *data, const SizeType index)</argsstring>
        <name>Contiguous</name>
        <param>
          <type>DataType *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const SizeType</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/container/iterator/contiguous.h" line="16" column="1" bodyfile="include/container/iterator/contiguous.h" bodystart="16" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classbzd_1_1iterator_1_1Contiguous_1aac30fd820014441e9ae1524316582630" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classbzd_1_1iterator_1_1Contiguous" kindref="compound">SelfType</ref> &amp;</type>
        <definition>constexpr SelfType&amp; bzd::iterator::Contiguous&lt; DataType &gt;::operator++</definition>
        <argsstring>() noexcept</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/container/iterator/contiguous.h" line="21" column="1" bodyfile="include/container/iterator/contiguous.h" bodystart="21" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classbzd_1_1iterator_1_1Contiguous_1afc2347ed56812c7fa01b605ad8fd8403" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classbzd_1_1iterator_1_1Contiguous" kindref="compound">SelfType</ref></type>
        <definition>constexpr SelfType bzd::iterator::Contiguous&lt; DataType &gt;::operator++</definition>
        <argsstring>(int) noexcept</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/container/iterator/contiguous.h" line="27" column="1" bodyfile="include/container/iterator/contiguous.h" bodystart="27" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classbzd_1_1iterator_1_1Contiguous_1ab149dbd4d2a9aaad200298e6a1050a8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classbzd_1_1iterator_1_1Contiguous" kindref="compound">SelfType</ref> &amp;</type>
        <definition>constexpr SelfType&amp; bzd::iterator::Contiguous&lt; DataType &gt;::operator--</definition>
        <argsstring>() noexcept</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/container/iterator/contiguous.h" line="34" column="1" bodyfile="include/container/iterator/contiguous.h" bodystart="34" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classbzd_1_1iterator_1_1Contiguous_1a2bef3299e9458a8c25da681927188a0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classbzd_1_1iterator_1_1Contiguous" kindref="compound">SelfType</ref></type>
        <definition>constexpr SelfType bzd::iterator::Contiguous&lt; DataType &gt;::operator--</definition>
        <argsstring>(int) noexcept</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/container/iterator/contiguous.h" line="40" column="1" bodyfile="include/container/iterator/contiguous.h" bodystart="40" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classbzd_1_1iterator_1_1Contiguous_1a4dc3619003d01fc1fdb2f479160bcfea" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classbzd_1_1iterator_1_1Contiguous" kindref="compound">SelfType</ref></type>
        <definition>constexpr SelfType bzd::iterator::Contiguous&lt; DataType &gt;::operator-</definition>
        <argsstring>(const int n) const noexcept</argsstring>
        <name>operator-</name>
        <param>
          <type>const int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/container/iterator/contiguous.h" line="47" column="1" bodyfile="include/container/iterator/contiguous.h" bodystart="47" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classbzd_1_1iterator_1_1Contiguous_1a73dd951c956717c0d3cde7d0ac300848" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classbzd_1_1iterator_1_1Contiguous" kindref="compound">SelfType</ref></type>
        <definition>constexpr SelfType bzd::iterator::Contiguous&lt; DataType &gt;::operator+</definition>
        <argsstring>(const int n) const noexcept</argsstring>
        <name>operator+</name>
        <param>
          <type>const int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/container/iterator/contiguous.h" line="54" column="1" bodyfile="include/container/iterator/contiguous.h" bodystart="54" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classbzd_1_1iterator_1_1Contiguous_1a3afb7f7909cca3f8f25023430eb19fc0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classbzd_1_1iterator_1_1Contiguous" kindref="compound">SelfType</ref> &amp;</type>
        <definition>constexpr SelfType&amp; bzd::iterator::Contiguous&lt; DataType &gt;::operator-=</definition>
        <argsstring>(const int n) noexcept</argsstring>
        <name>operator-=</name>
        <param>
          <type>const int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/container/iterator/contiguous.h" line="61" column="1" bodyfile="include/container/iterator/contiguous.h" bodystart="61" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classbzd_1_1iterator_1_1Contiguous_1a28ac26d40406b190355dab30f14faef1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classbzd_1_1iterator_1_1Contiguous" kindref="compound">SelfType</ref> &amp;</type>
        <definition>constexpr SelfType&amp; bzd::iterator::Contiguous&lt; DataType &gt;::operator+=</definition>
        <argsstring>(const int n) noexcept</argsstring>
        <name>operator+=</name>
        <param>
          <type>const int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/container/iterator/contiguous.h" line="67" column="1" bodyfile="include/container/iterator/contiguous.h" bodystart="67" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classbzd_1_1iterator_1_1Contiguous_1a8a9f649c6a1cf72464be16499b13ef5c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool bzd::iterator::Contiguous&lt; DataType &gt;::operator==</definition>
        <argsstring>(const SelfType &amp;it) const noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classbzd_1_1iterator_1_1Contiguous" kindref="compound">SelfType</ref> &amp;</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/container/iterator/contiguous.h" line="73" column="1" bodyfile="include/container/iterator/contiguous.h" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classbzd_1_1iterator_1_1Contiguous_1aa9900f90605b0d8ee6e4a5c630f845e9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool bzd::iterator::Contiguous&lt; DataType &gt;::operator!=</definition>
        <argsstring>(const SelfType &amp;it) const noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classbzd_1_1iterator_1_1Contiguous" kindref="compound">SelfType</ref> &amp;</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/container/iterator/contiguous.h" line="78" column="1" bodyfile="include/container/iterator/contiguous.h" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classbzd_1_1iterator_1_1Contiguous_1ab30a6693512b64cc32297769e4f31aef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr DataType &amp;</type>
        <definition>constexpr DataType&amp; bzd::iterator::Contiguous&lt; DataType &gt;::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/container/iterator/contiguous.h" line="83" column="1" bodyfile="include/container/iterator/contiguous.h" bodystart="83" bodyend="86"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/container/iterator/contiguous.h" line="11" column="1" bodyfile="include/container/iterator/contiguous.h" bodystart="10" bodyend="91"/>
    <listofallmembers>
      <member refid="classbzd_1_1iterator_1_1Contiguous_1a9fc2da38f13c81cfdce278a29e9c9e07" prot="public" virt="non-virtual"><scope>bzd::iterator::Contiguous</scope><name>Contiguous</name></member>
      <member refid="classbzd_1_1iterator_1_1Contiguous_1a6f981461f4488832a5dd04e16ec3631f" prot="private" virt="non-virtual"><scope>bzd::iterator::Contiguous</scope><name>data_</name></member>
      <member refid="classbzd_1_1iterator_1_1Contiguous_1ad4573267cd81532f8903048ba99032a5" prot="private" virt="non-virtual"><scope>bzd::iterator::Contiguous</scope><name>index_</name></member>
      <member refid="classbzd_1_1iterator_1_1Contiguous_1aa9900f90605b0d8ee6e4a5c630f845e9" prot="public" virt="non-virtual"><scope>bzd::iterator::Contiguous</scope><name>operator!=</name></member>
      <member refid="classbzd_1_1iterator_1_1Contiguous_1ab30a6693512b64cc32297769e4f31aef" prot="public" virt="non-virtual"><scope>bzd::iterator::Contiguous</scope><name>operator*</name></member>
      <member refid="classbzd_1_1iterator_1_1Contiguous_1a73dd951c956717c0d3cde7d0ac300848" prot="public" virt="non-virtual"><scope>bzd::iterator::Contiguous</scope><name>operator+</name></member>
      <member refid="classbzd_1_1iterator_1_1Contiguous_1aac30fd820014441e9ae1524316582630" prot="public" virt="non-virtual"><scope>bzd::iterator::Contiguous</scope><name>operator++</name></member>
      <member refid="classbzd_1_1iterator_1_1Contiguous_1afc2347ed56812c7fa01b605ad8fd8403" prot="public" virt="non-virtual"><scope>bzd::iterator::Contiguous</scope><name>operator++</name></member>
      <member refid="classbzd_1_1iterator_1_1Contiguous_1a28ac26d40406b190355dab30f14faef1" prot="public" virt="non-virtual"><scope>bzd::iterator::Contiguous</scope><name>operator+=</name></member>
      <member refid="classbzd_1_1iterator_1_1Contiguous_1a4dc3619003d01fc1fdb2f479160bcfea" prot="public" virt="non-virtual"><scope>bzd::iterator::Contiguous</scope><name>operator-</name></member>
      <member refid="classbzd_1_1iterator_1_1Contiguous_1ab149dbd4d2a9aaad200298e6a1050a8a" prot="public" virt="non-virtual"><scope>bzd::iterator::Contiguous</scope><name>operator--</name></member>
      <member refid="classbzd_1_1iterator_1_1Contiguous_1a2bef3299e9458a8c25da681927188a0f" prot="public" virt="non-virtual"><scope>bzd::iterator::Contiguous</scope><name>operator--</name></member>
      <member refid="classbzd_1_1iterator_1_1Contiguous_1a3afb7f7909cca3f8f25023430eb19fc0" prot="public" virt="non-virtual"><scope>bzd::iterator::Contiguous</scope><name>operator-=</name></member>
      <member refid="classbzd_1_1iterator_1_1Contiguous_1a8a9f649c6a1cf72464be16499b13ef5c" prot="public" virt="non-virtual"><scope>bzd::iterator::Contiguous</scope><name>operator==</name></member>
      <member refid="classbzd_1_1iterator_1_1Contiguous_1a84e974999f1a7541291af005d478575c" prot="public" virt="non-virtual"><scope>bzd::iterator::Contiguous</scope><name>SelfType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="constructible_8h" kind="file" language="C++">
    <compoundname>constructible.h</compoundname>
    <includes refid="integral__constant_8h" local="yes">include/type_traits/integral_constant.h</includes>
    <includes refid="reference_8h" local="yes">include/type_traits/reference.h</includes>
    <includes refid="void_8h" local="yes">include/type_traits/void.h</includes>
    <includes refid="utils_8h" local="yes">include/type_traits/utils.h</includes>
    <includedby refid="format_8h" local="yes">include/format.h</includedby>
    <includedby refid="constructible__test_8cpp" local="yes">include/type_traits/constructible_test.cpp</includedby>
    <incdepgraph>
      <node id="853">
        <label>include/type_traits/utils.h</label>
        <link refid="utils_8h_source"/>
        <childnode refid="850" relation="include">
        </childnode>
        <childnode refid="851" relation="include">
        </childnode>
      </node>
      <node id="852">
        <label>include/type_traits/void.h</label>
        <link refid="void_8h_source"/>
        <childnode refid="850" relation="include">
        </childnode>
      </node>
      <node id="849">
        <label>include/type_traits/constructible.h</label>
        <link refid="constructible_8h"/>
        <childnode refid="850" relation="include">
        </childnode>
        <childnode refid="851" relation="include">
        </childnode>
        <childnode refid="852" relation="include">
        </childnode>
        <childnode refid="853" relation="include">
        </childnode>
      </node>
      <node id="850">
        <label>include/type_traits/integral_constant.h</label>
        <link refid="integral__constant_8h_source"/>
      </node>
      <node id="851">
        <label>include/type_traits/reference.h</label>
        <link refid="reference_8h_source"/>
        <childnode refid="850" relation="include">
        </childnode>
        <childnode refid="852" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="854">
        <label>include/type_traits/constructible.h</label>
        <link refid="constructible_8h"/>
        <childnode refid="855" relation="include">
        </childnode>
      </node>
      <node id="856">
        <label>include/log.h</label>
        <link refid="log_8h_source"/>
        <childnode refid="857" relation="include">
        </childnode>
      </node>
      <node id="855">
        <label>include/format.h</label>
        <link refid="format_8h_source"/>
        <childnode refid="856" relation="include">
        </childnode>
      </node>
      <node id="857">
        <label>include/assert.h</label>
        <link refid="assert_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structbzd_1_1typeTraits_1_1impl_1_1isConstructible" prot="public">bzd::typeTraits::impl::isConstructible</innerclass>
    <innerclass refid="structbzd_1_1typeTraits_1_1impl_1_1isConstructible_3_01voidType_3_01decltype_07T_07declval_3_01Ab708546180c4980af3729b760eee75ea" prot="public">bzd::typeTraits::impl::isConstructible&lt; voidType&lt; decltype(T(declval&lt; Args &gt;()...))&gt;, T, Args... &gt;</innerclass>
    <innernamespace refid="namespacebzd">bzd</innernamespace>
    <innernamespace refid="namespacebzd_1_1typeTraits">bzd::typeTraits</innernamespace>
    <innernamespace refid="namespacebzd_1_1typeTraits_1_1impl">bzd::typeTraits::impl</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;include/type_traits/integral_constant.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;include/type_traits/reference.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;include/type_traits/void.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;include/type_traits/utils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacebzd" kindref="compound">bzd</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">typeTraits</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">impl</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="15" refid="structbzd_1_1typeTraits_1_1impl_1_1isConstructible" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbzd_1_1typeTraits_1_1impl_1_1isConstructible" kindref="compound">isConstructible</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structbzd_1_1typeTraits_1_1integralConstant" kindref="compound">falseType</ref><sp/>{};</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="18" refid="structbzd_1_1typeTraits_1_1impl_1_1isConstructible_3_01voidType_3_01decltype_07T_07declval_3_01Ab708546180c4980af3729b760eee75ea" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbzd_1_1typeTraits_1_1impl_1_1isConstructible" kindref="compound">isConstructible</ref>&lt;voidType&lt;decltype(T(declval&lt;Args&gt;()...))&gt;,<sp/>T,<sp/>Args...&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structbzd_1_1typeTraits_1_1integralConstant" kindref="compound">trueType</ref><sp/>{};</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structbzd_1_1typeTraits_1_1impl_1_1isConstructible" kindref="compound">isConstructible</ref><sp/>=<sp/><ref refid="structbzd_1_1typeTraits_1_1impl_1_1isConstructible" kindref="compound">impl::isConstructible&lt;voidType&lt;&gt;</ref>,<sp/>T,<sp/>Args...&gt;;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="include/type_traits/constructible.h"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classbzd_1_1String" kind="class" language="C++" prot="public">
    <compoundname>bzd::String</compoundname>
    <basecompoundref refid="classbzd_1_1impl_1_1String" prot="public" virt="non-virtual">bzd::impl::String&lt; char, Span&lt; char &gt; &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>SizeType</type>
        <declname>N</declname>
        <defname>N</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classbzd_1_1String_1ad7d2b75b56d85466e3ba3e8f6bd22b79" prot="protected" static="no" mutable="no">
        <type>interface::String::DataType</type>
        <definition>interface::String::DataType bzd::String&lt; N &gt;::data_[N+1]</definition>
        <argsstring>[N+1]</argsstring>
        <name>data_</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/container/string.h" line="132" column="1" bodyfile="include/container/string.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classbzd_1_1String_1a1bbac0b39e0a9c80f067787f9dc51ecf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr bzd::String&lt; N &gt;::String</definition>
        <argsstring>()</argsstring>
        <name>String</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/container/string.h" line="113" column="1" bodyfile="include/container/string.h" bodystart="113" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classbzd_1_1String_1aff8cd7bf19d9708c6a9b38987e6c05e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr bzd::String&lt; N &gt;::String</definition>
        <argsstring>(const bzd::StringView &amp;str)</argsstring>
        <name>String</name>
        <param>
          <type>const <ref refid="classbzd_1_1impl_1_1StringView" kindref="compound">bzd::StringView</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/container/string.h" line="114" column="1" bodyfile="include/container/string.h" bodystart="114" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classbzd_1_1String_1aff2af681b19a06f393eade0c66d9c6b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr bzd::String&lt; N &gt;::String</definition>
        <argsstring>(const SizeType n, const char c)</argsstring>
        <name>String</name>
        <param>
          <type>const SizeType</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/container/string.h" line="115" column="1" bodyfile="include/container/string.h" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classbzd_1_1String_1a33f9fa7717b2ecd10cd10faad2988fb0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="classbzd_1_1String" kindref="compound">String</ref>&lt; N &gt; &amp;</type>
        <definition>constexpr String&lt;N&gt;&amp; bzd::String&lt; N &gt;::operator=</definition>
        <argsstring>(const T &amp;data) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type>const T &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/container/string.h" line="118" column="1" bodyfile="include/container/string.h" bodystart="118" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classbzd_1_1String_1ae7b8dc4131da190aac39864ebd788a07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classbzd_1_1String" kindref="compound">String</ref>&lt; N &gt; &amp;</type>
        <definition>constexpr String&lt;N&gt;&amp; bzd::String&lt; N &gt;::operator=</definition>
        <argsstring>(const String&lt; N &gt; &amp;data) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classbzd_1_1String" kindref="compound">String</ref>&lt; N &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/container/string.h" line="125" column="1" bodyfile="include/container/string.h" bodystart="125" bodyend="129"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="501">
        <label>interface::String</label>
        <link refid="classbzd_1_1impl_1_1String"/>
        <childnode refid="502" relation="public-inheritance">
        </childnode>
      </node>
      <node id="500">
        <label>bzd::String&lt; N &gt;</label>
        <link refid="classbzd_1_1String"/>
        <childnode refid="501" relation="public-inheritance">
        </childnode>
      </node>
      <node id="502">
        <label>Impl</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="504">
        <label>interface::String</label>
        <link refid="classbzd_1_1impl_1_1String"/>
        <childnode refid="505" relation="public-inheritance">
        </childnode>
      </node>
      <node id="503">
        <label>bzd::String&lt; N &gt;</label>
        <link refid="classbzd_1_1String"/>
        <childnode refid="504" relation="public-inheritance">
        </childnode>
      </node>
      <node id="505">
        <label>Impl</label>
      </node>
    </collaborationgraph>
    <location file="include/container/string.h" line="111" column="1" bodyfile="include/container/string.h" bodystart="110" bodyend="133"/>
    <listofallmembers>
      <member refid="classbzd_1_1impl_1_1String_1a909ef889552751fdfe3f206a300384bb" prot="public" virt="non-virtual"><scope>bzd::String</scope><name>append</name></member>
      <member refid="classbzd_1_1impl_1_1String_1abe95ca366312a7eaf0da9a108238a0e2" prot="public" virt="non-virtual"><scope>bzd::String</scope><name>append</name></member>
      <member refid="classbzd_1_1impl_1_1String_1a38b7732bec9f1acde5b3569a97ed0be6" prot="public" virt="non-virtual"><scope>bzd::String</scope><name>append</name></member>
      <member refid="classbzd_1_1impl_1_1String_1a2cad6ab90d2606586ce67716f8b9ff19" prot="public" virt="non-virtual"><scope>bzd::String</scope><name>append</name></member>
      <member refid="classbzd_1_1impl_1_1String_1ab3ac3e97f70561ddcb3760acf2625878" prot="public" virt="non-virtual"><scope>bzd::String</scope><name>assign</name></member>
      <member refid="classbzd_1_1impl_1_1String_1ae387833b6565022faa19c3cc3a4168ed" prot="public" virt="non-virtual"><scope>bzd::String</scope><name>capacity</name></member>
      <member refid="classbzd_1_1impl_1_1String_1a5a0745223c7a00f9578619da04877f0c" prot="public" virt="non-virtual"><scope>bzd::String</scope><name>capacity_</name></member>
      <member refid="classbzd_1_1impl_1_1String_1a374161cce72004fd645df22cd84bd50b" prot="public" virt="non-virtual"><scope>bzd::String</scope><name>clear</name></member>
      <member refid="classbzd_1_1String_1ad7d2b75b56d85466e3ba3e8f6bd22b79" prot="protected" virt="non-virtual"><scope>bzd::String</scope><name>data_</name></member>
      <member refid="classbzd_1_1impl_1_1String_1a3c1152b72e84e60db2f74f519316e277" prot="public" virt="non-virtual"><scope>bzd::String</scope><name>operator+=</name></member>
      <member refid="classbzd_1_1String_1a33f9fa7717b2ecd10cd10faad2988fb0" prot="public" virt="non-virtual"><scope>bzd::String</scope><name>operator=</name></member>
      <member refid="classbzd_1_1String_1ae7b8dc4131da190aac39864ebd788a07" prot="public" virt="non-virtual"><scope>bzd::String</scope><name>operator=</name></member>
      <member refid="classbzd_1_1impl_1_1String_1a4fa1168443d81560da18876d2f18f713" prot="public" virt="non-virtual" ambiguityscope="bzd::impl::String::"><scope>bzd::String</scope><name>operator=</name></member>
      <member refid="classbzd_1_1impl_1_1String_1acfcfea3798d5426c5fd397af23f5937d" prot="protected" virt="non-virtual"><scope>bzd::String</scope><name>Parent</name></member>
      <member refid="classbzd_1_1impl_1_1String_1a569774da00ee68fe18eebcd4e2e877c7" prot="public" virt="non-virtual"><scope>bzd::String</scope><name>resize</name></member>
      <member refid="classbzd_1_1String_1a1bbac0b39e0a9c80f067787f9dc51ecf" prot="public" virt="non-virtual"><scope>bzd::String</scope><name>String</name></member>
      <member refid="classbzd_1_1String_1aff8cd7bf19d9708c6a9b38987e6c05e6" prot="public" virt="non-virtual"><scope>bzd::String</scope><name>String</name></member>
      <member refid="classbzd_1_1String_1aff2af681b19a06f393eade0c66d9c6b3" prot="public" virt="non-virtual"><scope>bzd::String</scope><name>String</name></member>
      <member refid="classbzd_1_1impl_1_1String_1ac888bc340bae4e71c32be785a1261af5" prot="public" virt="non-virtual" ambiguityscope="bzd::impl::String::"><scope>bzd::String</scope><name>String</name></member>
      <member refid="classbzd_1_1impl_1_1String_1ae297aad5c516ea52e890864515af9dfa" prot="protected" virt="non-virtual"><scope>bzd::String</scope><name>StringView</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

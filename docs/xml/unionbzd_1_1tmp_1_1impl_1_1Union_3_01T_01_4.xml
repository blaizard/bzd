<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="unionbzd_1_1tmp_1_1impl_1_1Union_3_01T_01_4" kind="union" language="C++" prot="public">
    <compoundname>bzd::tmp::impl::Union&lt; T &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="unionbzd_1_1tmp_1_1impl_1_1Union_3_01T_01_4_1af7424741232c13c6c01261fa85696715" prot="protected" static="no" mutable="no">
        <type>T</type>
        <definition>T bzd::tmp::impl::Union&lt; T &gt;::value_</definition>
        <argsstring></argsstring>
        <name>value_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/template_metaprogramming.h" line="192" column="1" bodyfile="include/template_metaprogramming.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="unionbzd_1_1tmp_1_1impl_1_1Union_3_01T_01_4_1aaf8974de80d19274b1bd60240f921f24" prot="protected" static="no" mutable="no">
        <type>struct <ref refid="unionbzd_1_1tmp_1_1impl_1_1Union" kindref="compound">bzd::tmp::impl::Union</ref>&lt; T &gt;::@3</type>
        <definition>struct bzd::tmp::impl::Union&lt; T &gt;::@3  bzd::tmp::impl::Union&lt; T &gt;::dummy_</definition>
        <argsstring></argsstring>
        <name>dummy_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/template_metaprogramming.h" line="193" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="unionbzd_1_1tmp_1_1impl_1_1Union_3_01T_01_4_1af0f45d343a14a27afdddb5f1f67b936b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr bzd::tmp::impl::Union&lt; T &gt;::Union</definition>
        <argsstring>()</argsstring>
        <name>Union</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/template_metaprogramming.h" line="179" column="1" bodyfile="include/template_metaprogramming.h" bodystart="179" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="unionbzd_1_1tmp_1_1impl_1_1Union_3_01T_01_4_1a3b5738de4599f9cf4721515ca88accdd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>bzd::tmp::impl::Union&lt; T &gt;::~Union</definition>
        <argsstring>()</argsstring>
        <name>~Union</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/template_metaprogramming.h" line="180" column="1" bodyfile="include/template_metaprogramming.h" bodystart="180" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="unionbzd_1_1tmp_1_1impl_1_1Union_3_01T_01_4_1a08bb0146a73912d16a76b9c130aa9107" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>typename <ref refid="structbzd_1_1typeTraits_1_1enableIf" kindref="compound">typeTraits::enableIf</ref>&lt; <ref refid="structbzd_1_1typeTraits_1_1isSame" kindref="compound">bzd::typeTraits::isSame</ref>&lt; T, U &gt;::value &gt;::type *</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr bzd::tmp::impl::Union&lt; T &gt;::Union</definition>
        <argsstring>(const U &amp;value)</argsstring>
        <name>Union</name>
        <param>
          <type>const U &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/template_metaprogramming.h" line="183" column="1" bodyfile="include/template_metaprogramming.h" bodystart="183" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="unionbzd_1_1tmp_1_1impl_1_1Union_3_01T_01_4_1aa32eae912919f6069821b2c09268714c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>typename <ref refid="structbzd_1_1typeTraits_1_1enableIf" kindref="compound">typeTraits::enableIf</ref>&lt; <ref refid="structbzd_1_1typeTraits_1_1isSame" kindref="compound">bzd::typeTraits::isSame</ref>&lt; T, U &gt;::value &gt;::type *</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>constexpr U &amp;</type>
        <definition>constexpr U&amp; bzd::tmp::impl::Union&lt; T &gt;::get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/template_metaprogramming.h" line="186" column="1" bodyfile="include/template_metaprogramming.h" bodystart="186" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="unionbzd_1_1tmp_1_1impl_1_1Union_3_01T_01_4_1aca89dabe16d7d8105931559b9db99669" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>typename <ref refid="structbzd_1_1typeTraits_1_1enableIf" kindref="compound">typeTraits::enableIf</ref>&lt; <ref refid="structbzd_1_1typeTraits_1_1isSame" kindref="compound">bzd::typeTraits::isSame</ref>&lt; T, U &gt;::value &gt;::type *</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>constexpr const U &amp;</type>
        <definition>constexpr const U&amp; bzd::tmp::impl::Union&lt; T &gt;::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/template_metaprogramming.h" line="189" column="1" bodyfile="include/template_metaprogramming.h" bodystart="189" bodyend="189"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="580">
        <label>T</label>
      </node>
      <node id="579">
        <label>bzd::tmp::impl::Union&lt; T &gt;</label>
        <link refid="unionbzd_1_1tmp_1_1impl_1_1Union_3_01T_01_4"/>
        <childnode refid="579" relation="usage">
          <edgelabel>dummy_</edgelabel>
        </childnode>
        <childnode refid="580" relation="usage">
          <edgelabel>value_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/template_metaprogramming.h" line="177" column="1" bodyfile="include/template_metaprogramming.h" bodystart="176" bodyend="194"/>
    <listofallmembers>
      <member refid="unionbzd_1_1tmp_1_1impl_1_1Union_3_01T_01_4_1aaf8974de80d19274b1bd60240f921f24" prot="protected" virt="non-virtual"><scope>bzd::tmp::impl::Union&lt; T &gt;</scope><name>dummy_</name></member>
      <member refid="unionbzd_1_1tmp_1_1impl_1_1Union_3_01T_01_4_1aa32eae912919f6069821b2c09268714c" prot="public" virt="non-virtual"><scope>bzd::tmp::impl::Union&lt; T &gt;</scope><name>get</name></member>
      <member refid="unionbzd_1_1tmp_1_1impl_1_1Union_3_01T_01_4_1aca89dabe16d7d8105931559b9db99669" prot="public" virt="non-virtual"><scope>bzd::tmp::impl::Union&lt; T &gt;</scope><name>get</name></member>
      <member refid="unionbzd_1_1tmp_1_1impl_1_1Union_3_01T_01_4_1af0f45d343a14a27afdddb5f1f67b936b" prot="public" virt="non-virtual"><scope>bzd::tmp::impl::Union&lt; T &gt;</scope><name>Union</name></member>
      <member refid="unionbzd_1_1tmp_1_1impl_1_1Union_3_01T_01_4_1a08bb0146a73912d16a76b9c130aa9107" prot="public" virt="non-virtual"><scope>bzd::tmp::impl::Union&lt; T &gt;</scope><name>Union</name></member>
      <member refid="unionbzd_1_1tmp_1_1impl_1_1Union_3_01T_01_4_1af7424741232c13c6c01261fa85696715" prot="protected" virt="non-virtual"><scope>bzd::tmp::impl::Union&lt; T &gt;</scope><name>value_</name></member>
      <member refid="unionbzd_1_1tmp_1_1impl_1_1Union_3_01T_01_4_1a3b5738de4599f9cf4721515ca88accdd" prot="public" virt="non-virtual"><scope>bzd::tmp::impl::Union&lt; T &gt;</scope><name>~Union</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

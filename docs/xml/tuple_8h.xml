<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="tuple_8h" kind="file" language="C++">
    <compoundname>tuple.h</compoundname>
    <includes refid="types_8h" local="yes">include/types.h</includes>
    <includes refid="utility_8h" local="yes">include/utility.h</includes>
    <includes refid="utils_8h" local="yes">include/type_traits/utils.h</includes>
    <includes refid="template__metaprogramming_8h" local="yes">include/template_metaprogramming.h</includes>
    <includedby refid="format_8h" local="yes">include/format.h</includedby>
    <includedby refid="tuple__test_8cpp" local="yes">include/container/tuple_test.cpp</includedby>
    <incdepgraph>
      <node id="475">
        <label>include/type_traits/utils.h</label>
        <link refid="utils_8h_source"/>
        <childnode refid="469" relation="include">
        </childnode>
        <childnode refid="472" relation="include">
        </childnode>
      </node>
      <node id="470">
        <label>include/type_traits/function.h</label>
        <link refid="function_8h_source"/>
        <childnode refid="469" relation="include">
        </childnode>
      </node>
      <node id="466">
        <label>include/types.h</label>
        <link refid="types_8h_source"/>
      </node>
      <node id="468">
        <label>include/type_traits/array.h</label>
        <link refid="type__traits_2array_8h_source"/>
        <childnode refid="469" relation="include">
        </childnode>
      </node>
      <node id="473">
        <label>include/type_traits/void.h</label>
        <link refid="void_8h_source"/>
        <childnode refid="469" relation="include">
        </childnode>
      </node>
      <node id="467">
        <label>include/utility.h</label>
        <link refid="utility_8h_source"/>
        <childnode refid="466" relation="include">
        </childnode>
        <childnode refid="468" relation="include">
        </childnode>
        <childnode refid="470" relation="include">
        </childnode>
        <childnode refid="471" relation="include">
        </childnode>
        <childnode refid="472" relation="include">
        </childnode>
        <childnode refid="474" relation="include">
        </childnode>
        <childnode refid="475" relation="include">
        </childnode>
      </node>
      <node id="465">
        <label>include/container/tuple.h</label>
        <link refid="tuple_8h"/>
        <childnode refid="466" relation="include">
        </childnode>
        <childnode refid="467" relation="include">
        </childnode>
        <childnode refid="475" relation="include">
        </childnode>
        <childnode refid="476" relation="include">
        </childnode>
      </node>
      <node id="474">
        <label>include/type_traits/const_volatile.h</label>
        <link refid="const__volatile_8h_source"/>
        <childnode refid="469" relation="include">
        </childnode>
      </node>
      <node id="476">
        <label>include/template_metaprogramming.h</label>
        <link refid="template__metaprogramming_8h_source"/>
        <childnode refid="466" relation="include">
        </childnode>
        <childnode refid="467" relation="include">
        </childnode>
      </node>
      <node id="471">
        <label>include/type_traits/pointer.h</label>
        <link refid="pointer_8h_source"/>
        <childnode refid="472" relation="include">
        </childnode>
      </node>
      <node id="469">
        <label>include/type_traits/integral_constant.h</label>
        <link refid="integral__constant_8h_source"/>
      </node>
      <node id="472">
        <label>include/type_traits/reference.h</label>
        <link refid="reference_8h_source"/>
        <childnode refid="469" relation="include">
        </childnode>
        <childnode refid="473" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="477">
        <label>include/container/tuple.h</label>
        <link refid="tuple_8h"/>
        <childnode refid="478" relation="include">
        </childnode>
      </node>
      <node id="479">
        <label>include/log.h</label>
        <link refid="log_8h_source"/>
        <childnode refid="480" relation="include">
        </childnode>
      </node>
      <node id="478">
        <label>include/format.h</label>
        <link refid="format_8h_source"/>
        <childnode refid="479" relation="include">
        </childnode>
      </node>
      <node id="480">
        <label>include/assert.h</label>
        <link refid="assert_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structbzd_1_1impl_1_1TupleSizes" prot="public">bzd::impl::TupleSizes</innerclass>
    <innerclass refid="structbzd_1_1impl_1_1TupleRangeImpl" prot="public">bzd::impl::TupleRangeImpl</innerclass>
    <innerclass refid="structbzd_1_1impl_1_1TupleRangeImpl_3_01L_00_01I_00_01TupleSizes_3_01N_8_8_8_01_4_01_4" prot="public">bzd::impl::TupleRangeImpl&lt; L, I, TupleSizes&lt; N... &gt; &gt;</innerclass>
    <innerclass refid="structbzd_1_1impl_1_1TupleRangeImpl_3_01L_00_01L_00_01TupleSizes_3_01N_8_8_8_01_4_01_4" prot="public">bzd::impl::TupleRangeImpl&lt; L, L, TupleSizes&lt; N... &gt; &gt;</innerclass>
    <innerclass refid="structbzd_1_1impl_1_1NoType" prot="public">bzd::impl::NoType</innerclass>
    <innerclass refid="classbzd_1_1impl_1_1TupleElem" prot="public">bzd::impl::TupleElem</innerclass>
    <innerclass refid="classbzd_1_1impl_1_1TupleImpl" prot="public">bzd::impl::TupleImpl</innerclass>
    <innerclass refid="classbzd_1_1impl_1_1TupleImpl_3_01TupleSizes_3_01N_8_8_8_01_4_00_01T_8_8_8_01_4" prot="public">bzd::impl::TupleImpl&lt; TupleSizes&lt; N... &gt;, T... &gt;</innerclass>
    <innerclass refid="structbzd_1_1Tuple" prot="public">bzd::Tuple</innerclass>
    <innernamespace refid="namespacebzd">bzd</innernamespace>
    <innernamespace refid="namespacebzd_1_1impl">bzd::impl</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;include/types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;include/utility.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;include/type_traits/utils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;include/template_metaprogramming.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacebzd" kindref="compound">bzd</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">impl</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>TupleTypeOf<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T::type;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;SizeType...<sp/>N&gt;</highlight></codeline>
<codeline lineno="16" refid="structbzd_1_1impl_1_1TupleSizes" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbzd_1_1impl_1_1TupleSizes" kindref="compound">TupleSizes</ref><sp/>:<sp/><ref refid="structbzd_1_1tmp_1_1Type" kindref="compound">bzd::tmp::Type</ref>&lt;TupleSizes&lt;N...&gt;&gt;{};</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>given<sp/>L&gt;=0,<sp/>generate<sp/>sequence<sp/>&lt;0,<sp/>...,<sp/>L-1&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;SizeType<sp/>L,<sp/>SizeType<sp/>I<sp/>=<sp/>0,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>S<sp/>=<sp/>TupleSizes&lt;&gt;&gt;</highlight></codeline>
<codeline lineno="21" refid="structbzd_1_1impl_1_1TupleRangeImpl" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbzd_1_1impl_1_1TupleRangeImpl" kindref="compound">TupleRangeImpl</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;SizeType<sp/>L,<sp/>SizeType<sp/>I,<sp/>SizeType...<sp/>N&gt;</highlight></codeline>
<codeline lineno="24" refid="structbzd_1_1impl_1_1TupleRangeImpl_3_01L_00_01I_00_01TupleSizes_3_01N_8_8_8_01_4_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbzd_1_1impl_1_1TupleRangeImpl" kindref="compound">TupleRangeImpl</ref>&lt;L,<sp/>I,<sp/><ref refid="structbzd_1_1impl_1_1TupleSizes" kindref="compound">TupleSizes</ref>&lt;N...&gt;&gt;<sp/>:<sp/><ref refid="structbzd_1_1impl_1_1TupleRangeImpl" kindref="compound">TupleRangeImpl</ref>&lt;L,<sp/>I+1,<sp/>TupleSizes&lt;N...,<sp/>I&gt;&gt;{};</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;SizeType<sp/>L,<sp/>SizeType...<sp/>N&gt;</highlight></codeline>
<codeline lineno="27" refid="structbzd_1_1impl_1_1TupleRangeImpl_3_01L_00_01L_00_01TupleSizes_3_01N_8_8_8_01_4_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbzd_1_1impl_1_1TupleRangeImpl" kindref="compound">TupleRangeImpl</ref>&lt;L,<sp/>L,<sp/><ref refid="structbzd_1_1impl_1_1TupleSizes" kindref="compound">TupleSizes</ref>&lt;N...&gt;&gt;<sp/>:<sp/><ref refid="structbzd_1_1impl_1_1TupleSizes" kindref="compound">TupleSizes</ref>&lt;N...&gt;{};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;SizeType<sp/>L&gt;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>TupleRange<sp/>=<sp/>TupleTypeOf&lt;TupleRangeImpl&lt;L&gt;&gt;;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TupleChooseN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="structbzd_1_1impl_1_1NoType" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbzd_1_1impl_1_1NoType" kindref="compound">NoType</ref><sp/>{};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;SizeType<sp/>index&gt;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/><ref refid="structbzd_1_1impl_1_1NoType" kindref="compound">NoType</ref><sp/>TupleChooseN()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structbzd_1_1impl_1_1NoType" kindref="compound">NoType</ref>{};<sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;SizeType<sp/>index,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Ts,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structbzd_1_1typeTraits_1_1enableIf" kindref="compound">typeTraits::enableIf&lt;(index &gt;</ref><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(Ts))&gt;::type*<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/><ref refid="structbzd_1_1impl_1_1NoType" kindref="compound">NoType</ref><sp/>TupleChooseN(T&amp;&amp;<sp/>t,<sp/>Ts&amp;&amp;...<sp/>ts)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structbzd_1_1impl_1_1NoType" kindref="compound">NoType</ref>{};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;SizeType<sp/>index,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Ts,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structbzd_1_1typeTraits_1_1enableIf" kindref="compound">typeTraits::enableIf&lt;index == 0&gt;::type</ref>*<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>decltype(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/>TupleChooseN(T&amp;&amp;<sp/>t,<sp/>Ts&amp;&amp;...<sp/>ts)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bzd::forward&lt;T&gt;(t);<sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;SizeType<sp/>index,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Ts,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structbzd_1_1typeTraits_1_1enableIf" kindref="compound">typeTraits::enableIf&lt;(index &gt;</ref><sp/>0<sp/>&amp;&amp;<sp/>index<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(Ts))&gt;::type*<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>decltype(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/>TupleChooseN(T&amp;&amp;<sp/>t,<sp/>Ts&amp;&amp;...<sp/>ts)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TupleChooseN&lt;index-1&gt;(bzd::forward&lt;Ts&gt;(ts)...);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>single<sp/>tuple<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;SizeType<sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="60" refid="classbzd_1_1impl_1_1TupleElem" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbzd_1_1impl_1_1TupleElem" kindref="compound">TupleElem</ref></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>elem_{};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/><ref refid="classbzd_1_1impl_1_1TupleElem" kindref="compound">TupleElem</ref>()<sp/>noexcept<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/><ref refid="classbzd_1_1impl_1_1TupleElem" kindref="compound">TupleElem</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>value)<sp/>noexcept<sp/>:<sp/>elem_(value)<sp/>{}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/><ref refid="classbzd_1_1impl_1_1TupleElem" kindref="compound">TupleElem</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structbzd_1_1impl_1_1NoType" kindref="compound">NoType</ref>&amp;)<sp/>noexcept<sp/>:<sp/>elem_()<sp/>{}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>T&amp;<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">()<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elem_;<sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elem_;<sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tuple<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="77" refid="classbzd_1_1impl_1_1TupleImpl" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbzd_1_1impl_1_1TupleImpl" kindref="compound">TupleImpl</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;SizeType...<sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="80" refid="classbzd_1_1impl_1_1TupleImpl_3_01TupleSizes_3_01N_8_8_8_01_4_00_01T_8_8_8_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbzd_1_1impl_1_1TupleImpl" kindref="compound">TupleImpl</ref>&lt;<ref refid="structbzd_1_1impl_1_1TupleSizes" kindref="compound">TupleSizes</ref>&lt;N...&gt;,<sp/>T...&gt;<sp/>:<sp/><ref refid="classbzd_1_1impl_1_1TupleElem" kindref="compound">TupleElem</ref>&lt;N,<sp/>T&gt;...</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;SizeType<sp/>M&gt;<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>pick<sp/>=<sp/>bzd::tmp::ChooseNth&lt;M,<sp/>T...&gt;;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;SizeType<sp/>M&gt;<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classbzd_1_1impl_1_1TupleElem" kindref="compound">elem</ref><sp/>=<sp/><ref refid="classbzd_1_1impl_1_1TupleElem" kindref="compound">TupleElem&lt;M, pick&lt;M&gt;</ref>&gt;;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/><ref refid="classbzd_1_1impl_1_1TupleImpl" kindref="compound">TupleImpl</ref>(Args&amp;&amp;...<sp/>args)<sp/>noexcept</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classbzd_1_1impl_1_1TupleElem" kindref="compound">TupleElem&lt;N, T&gt;</ref>(TupleChooseN&lt;N,<sp/>Args...&gt;(bzd::forward&lt;Args&gt;(args)...))...</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Access<sp/>by<sp/>index<sp/>as<sp/>template<sp/>(type<sp/>is<sp/>automatically<sp/>deducted)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;SizeType<sp/>M&gt;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>pick&lt;M&gt;&amp;<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">()<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classbzd_1_1impl_1_1TupleElem" kindref="compound">elem&lt;M&gt;::get</ref>();<sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;SizeType<sp/>M&gt;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pick&lt;M&gt;&amp;<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classbzd_1_1impl_1_1TupleElem" kindref="compound">elem&lt;M&gt;::get</ref>();<sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="104" refid="structbzd_1_1Tuple" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbzd_1_1Tuple" kindref="compound">Tuple</ref><sp/>:<sp/><ref refid="classbzd_1_1impl_1_1TupleImpl" kindref="compound">impl::TupleImpl</ref>&lt;impl::TupleRange&lt;sizeof...(T)&gt;,<sp/>T...&gt;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>SizeType<sp/>size()<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(T);<sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Forward<sp/>constructor<sp/>as<sp/>constexpr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/><ref refid="structbzd_1_1Tuple" kindref="compound">Tuple</ref>(Args&amp;&amp;...<sp/>args)<sp/>noexcept</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classbzd_1_1impl_1_1TupleImpl" kindref="compound">impl::TupleImpl</ref>&lt;impl::TupleRange&lt;</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(T)&gt;,<sp/>T...&gt;(bzd::forward&lt;Args&gt;(args)...)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="include/container/tuple.h"/>
  </compounddef>
</doxygen>

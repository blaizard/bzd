#!/bin/bash

# Do not modify, this file has been generated by //tools/ci

set -e

EXTRA_FLAGS="$@"

echo  "==== [normal] clang-tidy ==============================="
./tools/bazel test ... --output_groups=+metadata --config=dev --config=clang_tidy --platform_suffix=clang_tidy $EXTRA_FLAGS
echo  "==== [normal] linux_x86_64_clang prod ==============================="
./tools/bazel test ... --output_groups=+metadata --config=linux_x86_64_clang --config=prod --platform_suffix=linux_x86_64_clang_prod $EXTRA_FLAGS
echo  "==== [normal] linux_x86_64_gcc prod ==============================="
./tools/bazel test ... --output_groups=+metadata --config=linux_x86_64_gcc --config=prod --config=cc --platform_suffix=linux_x86_64_gcc_prod $EXTRA_FLAGS
echo  "==== [normal] esp32_xtensa_lx6_gcc prod ==============================="
./tools/bazel test ... --output_groups=+metadata --config=esp32_xtensa_lx6_gcc --config=prod --config=cc --platform_suffix=esp32_xtensa_lx6_gcc_prod $EXTRA_FLAGS
echo  "==== [stress] dev (100 runs) ==============================="
./tools/bazel test ... --build_tests_only --test_tag_filters=stress,-cc-coverage --config=dev --runs_per_test=100 --platform_suffix=stress_dev $EXTRA_FLAGS
echo  "==== [stress] prod (100 runs) ==============================="
./tools/bazel test ... --build_tests_only --test_tag_filters=stress,-cc-coverage --config=prod --runs_per_test=100 --platform_suffix=stress_prod $EXTRA_FLAGS
echo  "==== [sanitizer] asan/lsan ==============================="
./tools/bazel test ... --config=linux_x86_64_clang --config=cc --config=sanitizer --config=asan --config=lsan --platform_suffix=clang_asan_lsan $EXTRA_FLAGS
echo  "==== [coverage] C++ ==============================="
./tools/bazel coverage cc/... --config=linux_x86_64_gcc --config=cc --platform_suffix=coverage_cc && ./tools/bazel run tools/coverage --platform_suffix=coverage_cc -- --output bazel-out/coverage_cc $EXTRA_FLAGS
echo  "==== [coverage] Python ==============================="
./tools/bazel coverage ... --config=py --platform_suffix=coverage_py && ./tools/bazel run tools/coverage --platform_suffix=coverage_py -- --output bazel-out/coverage_py $EXTRA_FLAGS
echo  "==== [coverage] NodeJs ==============================="
./tools/bazel coverage ... --config=nodejs --platform_suffix=coverage_nodejs && ./tools/bazel run tools/coverage --platform_suffix=coverage_nodejs -- --output bazel-out/coverage_nodejs $EXTRA_FLAGS
echo  "==== [sanitizer] sanitizer ==============================="
./sanitize.sh $EXTRA_FLAGS
